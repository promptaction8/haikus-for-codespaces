generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Certification {
  idx       Int      @id @default(autoincrement())
  email     String   @db.VarChar(100)
  emailcode String   @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Employeeaccount {
  idx           Int       @id @default(autoincrement())
  id            String    @unique @db.VarChar(100)
  password      String    @db.VarChar(100)
  email         String    @db.VarChar(100)
  phonenumber   String    @db.VarChar(100)
  address       String    @db.VarChar(100)
  depart        String    @db.VarChar(100)
  position      String    @db.VarChar(100)
  dateofjoining String    @db.VarChar(100)
  createdAt     DateTime? @default(now()) @db.Timestamp(0)
  updatedAt     DateTime? @default(now()) @db.Timestamp(0)
}

model Patient {
  idx         Int      @id @default(autoincrement())
  name        String   @db.VarChar(100)
  ssn         String   @unique @db.VarChar(50)
  chartNumber String   @db.VarChar(50)
  createdAt   DateTime @default(now()) @db.Timestamp(0)
  updatedAt   DateTime @default(now()) @db.Timestamp(0)

  medicalHistory         MedicalHistory[]
  nursingHistory         NursingHistory[]
  nursingPlan            NursingPlan[]
  nursingSurvey          NursingSurvey[]
  surgeryRegister        SurgeryRegister[]
  cooperation            Cooperation[]
  prnOrder               PrnOrder[]
  morseFallScale         MorseFallScale[]
  bradenScale            BradenScale[]
  numericPainRatingScale NumericPainRatingScale[]
  mmse                   MMSE[]
  medicationRecord       MedicationRecord[]
}

model MedicalHistory {
  patientIdx               Int
  idx                      Int    @id @default(autoincrement())
  mainSymptoms             String @db.VarChar(200)
  pastMedicalHistory       String @db.VarChar(200)
  allergicHistory          String @db.VarChar(100)
  usingDrugs               String @db.VarChar(200)
  familyMedicalHistory     String @db.VarChar(200)
  mentalHealthStatus       String @db.VarChar(200)
  physicalHealthStatus     String @db.VarChar(200)
  previousTreatmentHistory String @db.VarChar(200)
  livingEnvironment        String @db.VarChar(200)

  patient Patient @relation(fields: [patientIdx], references: [idx])
}

//간호기록
model NursingHistory {
  patientIdx Int
  idx        Int      @id @default(autoincrement())
  date       DateTime @db.Timestamp(0)
  time       DateTime @db.Timestamp(0)
  content    String   @db.VarChar(400)
  type       String   @db.VarChar(100)
  result     String   @db.VarChar(400)
  employee   String   @db.VarChar(50)

  patient Patient @relation(fields: [patientIdx], references: [idx])
}

//간호계획
model NursingPlan {
  patientIdx Int
  idx        Int      @id @default(autoincrement())
  date       DateTime @db.Timestamp(0)
  time       DateTime @db.Timestamp(0)
  content    String   @db.VarChar(400)
  type       String   @db.VarChar(100)
  employee   String   @db.VarChar(50)

  patient Patient @relation(fields: [patientIdx], references: [idx])
}

//간호정보조사지
model NursingSurvey {
  patientIdx       Int
  idx              Int     @id @default(autoincrement())
  sex              String  @db.VarChar(20)
  age              String  @db.VarChar(30)
  address          String  @db.VarChar(200)
  occupation       String? @db.VarChar(100)
  bloodType        String? @db.VarChar(20)
  marriageStatus   String? @db.VarChar(20)
  nationality      String? @db.VarChar(50)
  guardianName     String? @db.VarChar(50)
  guardianRelation String? @db.VarChar(50)
  guardianPhone    String? @db.VarChar(50)
  insuranceStatus  String? @db.VarChar(50)
  insuranceType    String? @db.VarChar(50)
  insuranceCompany String? @db.VarChar(50)
  insuranceCode    String? @db.VarChar(50)
  religion         String? @db.VarChar(20)
  primaryDoctor    String? @db.VarChar(20)
  primaryNurse     String? @db.VarChar(20)
  vitalSigns       String? @db.VarChar(200)
  heightAndWeight  String? @db.VarChar(200)
  familyHistory    String? @db.VarChar(200)

  painLevel       String?  @db.VarChar(200)
  smokingStatus   String?  @db.VarChar(200)
  drinkingStatus  String?  @db.VarChar(200)
  allergicHistory String?  @db.VarChar(200)
  roomNumber      String?  @db.VarChar(50)
  admissionDate   String?  @db.VarChar(50)
  dischargeDate   String?  @db.VarChar(50)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now()) @updatedAt

  patient Patient @relation(fields: [patientIdx], references: [idx])
}

// 수술 등록
model SurgeryRegister {
  patientIdx Int
  idx        Int      @id @default(autoincrement())
  name       String   @db.VarChar(100)
  date       DateTime @db.Timestamp(0)
  time       DateTime @db.Timestamp(0)
  type       String   @db.VarChar(100)
  employee   String   @db.VarChar(200)
  content    String   @db.VarChar(400)
  result     String   @db.VarChar(400)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  patient Patient @relation(fields: [patientIdx], references: [idx])
}

//협진
model Cooperation {
  idx        Int      @id @default(autoincrement())
  patientIdx Int
  date       DateTime @db.Timestamp(0)
  time       DateTime @db.Timestamp(0)
  content    String   @db.VarChar(100)
  employee   String   @db.VarChar(100)
  result     String   @db.VarChar(100)

  patient Patient @relation(fields: [patientIdx], references: [idx])
}

//PRN order
model PrnOrder {
  idx        Int      @id @default(autoincrement())
  patientIdx Int
  date       DateTime @db.Timestamp(0)
  time       DateTime @db.Timestamp(0)
  content    String   @db.VarChar(100)
  employee   String   @db.VarChar(100)
  result     String   @db.VarChar(100)

  patient Patient @relation(fields: [patientIdx], references: [idx])
}

// Morse Fall Scale
model MorseFallScale {
  idx                   Int      @id @default(autoincrement())
  patientIdx            Int
  roomNumber            String   @db.VarChar(100)
  name                  String   @db.VarChar(100)
  gender                String   @db.VarChar(100)
  dateOfBirth           DateTime @db.Timestamp(0)
  fallHistoryFor3Months String   @db.VarChar(100)
  secondaryDiagnosis    String   @db.VarChar(100)
  ambulatoryAid         String   @db.VarChar(100)
  intravenousTherapy    String   @db.VarChar(100)
  gait                  String   @db.VarChar(100)
  mentalStatus          String   @db.VarChar(100)
  fallRiskFactors       String   @db.VarChar(100)
  totalScore            String   @db.VarChar(100)
  riskLevel             String   @db.VarChar(100)
  riskLevelColor        String   @db.VarChar(100)

  patient Patient @relation(fields: [patientIdx], references: [idx])
}

// Braden Scale
model BradenScale {
  idx               Int      @id @default(autoincrement())
  patientIdx        Int
  roomNumber        String   @db.VarChar(100)
  name              String   @db.VarChar(100)
  gender            Boolean
  dateOfBirth       DateTime @db.Timestamp(0)
  sensoryPerception String   @db.VarChar(100)
  moisture          String   @db.VarChar(100)
  activity          String   @db.VarChar(100)
  mobility          String   @db.VarChar(100)
  nutrition         String   @db.VarChar(100)
  frictionAndShear  String   @db.VarChar(100)
  totalScore        String   @db.VarChar(100)
  riskLevel         String   @db.VarChar(100)
  riskLevelColor    String   @db.VarChar(100)

  patient Patient @relation(fields: [patientIdx], references: [idx])
}

// Numeric Pain Rating Scale
model NumericPainRatingScale {
  idx            Int      @id @default(autoincrement())
  patientIdx     Int
  roomNumber     String   @db.VarChar(100)
  name           String   @db.VarChar(100)
  gender         Boolean
  dateOfBirth    DateTime @db.Timestamp(0)
  painLocation   String   @db.VarChar(100)
  painCause      String   @db.VarChar(100)
  painScore      String   @db.VarChar(100)
  painLevel      String   @db.VarChar(100)
  painLevelColor String   @db.VarChar(100)

  patient Patient @relation(fields: [patientIdx], references: [idx])
}

// MMSE
model MMSE {
  idx                     Int      @id @default(autoincrement())
  patientIdx              Int
  roomNumber              String   @db.VarChar(100)
  name                    String   @db.VarChar(100)
  gender                  Boolean
  dateOfBirth             DateTime @db.Timestamp(0)
  orientationToTime       DateTime @db.Timestamp(0)
  orientationToPlace      String   @db.VarChar(100)
  registration            String   @db.VarChar(100)
  attentionAndCalculation String   @db.VarChar(100)
  recall                  String   @db.VarChar(100)
  language                String   @db.VarChar(100)
  visualConstruction      String   @db.VarChar(100)
  totalScore              String   @db.VarChar(100)
  cognitiveImpairment     String   @db.VarChar(100)

  patient Patient @relation(fields: [patientIdx], references: [idx])
}

// 투약 기록
model MedicationRecord {
  idx        Int      @id @default(autoincrement())
  patientIdx Int
  date       DateTime @db.Timestamp(0)
  time       String   @db.VarChar(100)
  name       String   @db.VarChar(100)
  dose       String   @db.VarChar(100)
  employee   String   @db.VarChar(100)
  result     String   @db.VarChar(100)

  patient Patient @relation(fields: [patientIdx], references: [idx])
}
